#!/usr/bin/perl
#-----------------------------------------------------------------------------
#
# number.xbm
# (C) 1994 Eugene E. Devereaux
#
# Permission to use, copy, modify, and distribute this software
# and its documentation for any purpose and without fee is granted
# provided that the above copyright notice appears in all copies.
# It is provided "as is" without express or implied warranty.
#
# Purpose: This CGI script provides an easy way to keep track of HTML
#          page accesses.
#
# Installation: See http://www.halcyon.com/gened/gened.html
#
#-----------------------------------------------------------------------------

$SERVERROOT = "/home/cdzn/httpd";

$LOCK_SH = 1;
$LOCK_EX = 2;
$LOCK_NB = 4;
$LOCK_UN = 8;

sub lock {
#  flock(FVAL, $LOCK_EX);
}
sub unlock {
#  flock(FVAL, $LOCK_UN);
}
  
sub get_count {
  if (open(FVAL,"$SERVERROOT/counters$val_path") == 0) {
    foreach $i (5,4,3,2,1,0) {
      $elv[$i] = "0";
    }
  }
  else {
    &lock();
    $i = 0;
    while (<FVAL>) {
      chop;
      $elv[$i] = $_;
      $i++;
    }
    close FVAL;
  }
  foreach $i (5,4,3,2,1,0) {
    $elv[$i]++;
    if ( $elv[$i] > 9 ) {
      $elv[$i] = 0;
      if ( $i eq 0 ) {
        foreach $j (0..5) {
          $elv[$j] = 0;
        }
        $elv[5] = 1;
        last;
      }
    } else {
      last;
    }
  }
  open(FVAL,">$SERVERROOT/counters$val_path") 
       || die "Can't write to values file.\n";
  foreach $i (0..5) {
    print FVAL "$elv[$i]\n";
  }
  &unlock();
  close FVAL;
  foreach $i (0..5) {
    $elv[$i] *= 32;
  }
}
  
@num = (
'0x00', '0x00', '0x00', '0x00', '0x00', '0x00',
'0x00', '0x00', '0x00', '0x00', '0x00', '0x00',
'0xe0', '0x07', '0xe0', '0x07', '0xe0', '0x07',
'0xe0', '0x07', '0xe0', '0x07', '0x20', '0x00',
'0xf0', '0x0f', '0xf0', '0x0f', '0xf0', '0x0f',
'0xf0', '0x0f', '0xf0', '0x0f', '0x30', '0x00',
'0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c',
'0x30', '0x0c', '0x30', '0x0c', '0x30', '0x00',
'0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c',
'0x30', '0x0c', '0x30', '0x0c', '0x30', '0x00',
'0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c',
'0x30', '0x0c', '0x30', '0x0c', '0x30', '0x00',
'0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c',
'0x30', '0x0c', '0x30', '0x0c', '0x30', '0x00',
'0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c',
'0x30', '0x0c', '0x30', '0x0c', '0xf0', '0x07',
'0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c',
'0x30', '0x0c', '0x30', '0x0c', '0xf0', '0x0f',
'0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c',
'0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c',
'0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c',
'0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c',
'0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c',
'0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c',
'0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c',
'0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c',
'0xf0', '0x0f', '0xf0', '0x0f', '0xf0', '0x0f',
'0xf0', '0x0f', '0xf0', '0x0f', '0xf0', '0x0f',
'0xe0', '0x07', '0xe0', '0x07', '0xe0', '0x07',
'0xe0', '0x07', '0xe0', '0x07', '0xe0', '0x0f',
'0x00', '0x00', '0x00', '0x00', '0x00', '0x00',
'0x00', '0x00', '0x00', '0x00', '0x00', '0x00' );

@bmv  = ( 
  '0x00', '0x00', '0xe0', '0x07', '0xf0', '0x0f', 
  '0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c', 
  '0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c', 
  '0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c', 
  '0x30', '0x0c', '0xf0', '0x0f', '0xe0', '0x07', 
  '0x00', '0x00',
  '0x00', '0x00', '0x80', '0x01', '0xc0', '0x01', 
  '0xe0', '0x01', '0x80', '0x01', '0x80', '0x01', 
  '0x80', '0x01', '0x80', '0x01', '0x80', '0x01', 
  '0x80', '0x01', '0x80', '0x01', '0x80', '0x01',
  '0x80', '0x01', '0xe0', '0x07', '0xe0', '0x07', 
  '0x00', '0x00',
  '0x00', '0x00', '0xe0', '0x07', '0xf8', '0x1f', 
  '0x18', '0x18', '0x18', '0x18', '0x18', '0x1c', 
  '0x00', '0x0e', '0x00', '0x07', '0x80', '0x03', 
  '0xc0', '0x01', '0xe0', '0x00', '0x70', '0x00',
  '0x38', '0x00', '0xf8', '0x1f', '0xf8', '0x1f', 
  '0x00', '0x00',
  '0x00', '0x00', '0xf0', '0x07', '0xf0', '0x0f', 
  '0x30', '0x0c', '0x00', '0x0c', '0x00', '0x0c', 
  '0x00', '0x0c', '0xc0', '0x0f', '0xc0', '0x0f', 
  '0x00', '0x0c', '0x00', '0x0c', '0x00', '0x0c',
  '0x30', '0x0c', '0xf0', '0x0f', '0xf0', '0x07', 
  '0x00', '0x00',
  '0x00', '0x00', '0x00', '0x06', '0x00', '0x0f', 
  '0x80', '0x0f', '0xc0', '0x0d', '0xe0', '0x0c', 
  '0x70', '0x0c', '0xf0', '0x0f', '0xf0', '0x0f', 
  '0x00', '0x0c', '0x00', '0x0c', '0x00', '0x0c',
  '0x00', '0x0c', '0x00', '0x0c', '0x00', '0x0c', 
  '0x00', '0x00',
  '0x00', '0x00', '0xe0', '0x0f', '0xf0', '0x0f', 
  '0x30', '0x00', '0x30', '0x00', '0x30', '0x00', 
  '0x30', '0x00', '0xf0', '0x07', '0xe0', '0x0f', 
  '0x00', '0x0c', '0x00', '0x0c', '0x00', '0x0c',
  '0x30', '0x0c', '0xf0', '0x07', '0xe0', '0x03', 
  '0x00', '0x00',
  '0x00', '0x00', '0x20', '0x00', '0x30', '0x00', 
  '0x30', '0x00', '0x30', '0x00', '0x30', '0x00', 
  '0x30', '0x00', '0xf0', '0x07', '0xf0', '0x0f', 
  '0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c',
  '0x30', '0x0c', '0xf0', '0x0f', '0xe0', '0x0f', 
  '0x00', '0x00',
  '0x00', '0x00', '0xf0', '0x0f', '0xf0', '0x0f', 
  '0x30', '0x0c', '0x30', '0x0c', '0x00', '0x06', 
  '0x00', '0x03', '0x00', '0x03', '0x80', '0x01', 
  '0x80', '0x01', '0xc0', '0x00', '0xc0', '0x00',
  '0x60', '0x00', '0x60', '0x00', '0x60', '0x00', 
  '0x00', '0x00',
  '0x00', '0x00', '0xe0', '0x07', '0xf0', '0x0f', 
  '0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c', 
  '0x60', '0x06', '0xc0', '0x03', '0xc0', '0x03', 
  '0x60', '0x06', '0x30', '0x0c', '0x30', '0x0c',
  '0x30', '0x0c', '0xf0', '0x0f', '0xe0', '0x07', 
  '0x00', '0x00',
  '0x00', '0x00', '0xe0', '0x07', '0xf0', '0x0f', 
  '0x30', '0x0c', '0x30', '0x0c', '0x30', '0x0c', 
  '0xe0', '0x0f', '0xc0', '0x0f', '0x00', '0x0e', 
  '0x00', '0x0e', '0x00', '0x07', '0x80', '0x03',
  '0xc0', '0x01', '0xe0', '0x00', '0x60', '0x00', 
  '0x00', '0x00', );

$val_path = $ENV{"PATH_INFO"};
&get_count;
$i = 0;
$k = 0;
foreach $chr (0..15) {
  $j = $k;
  $k +=2;
  foreach $nv (0..5) {
    $num[$i+($nv*2)] = $bmv[$j+$elv[$nv]];
    $j++;
    $num[$i+1+($nv*2)] = $bmv[$j+$elv[$nv]];
    $j--;
  }
  $i += 12;
}
  print "Content-type: image/x-xbitmap\n";
  print "\n";
print "#define number_width 96\n";
print "#define number_height 16\n";
print "static char number_bits[] =  { \n";
$i = 1;
foreach $j (0..191) {
  if ( $j eq 191 ) {
    print "$num[$j] "
  } else {
    print "$num[$j], ";
  }
  if ($i eq 12) {
    print "\n";
    $i = 1;
  } else {
    $i++;
  }
}
print " };\n";


